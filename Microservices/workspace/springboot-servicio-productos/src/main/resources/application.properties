spring.application.name=servicio-productos
##Con Eureka dejamos de especificar el puerto donde se instanciara nuesto microservicio, lo cambiamos por ${PORT:0}, de ese modo Eureka se encargara de asignarle un puerto, es mas dinamico
##Antes de eureka server, ejecutabamos nuestro app productos cambiando el puerto en "Run Configuration" ->  Arguments -> VM Arguments especificabamos "-Dserver.port=9001" y luego boton Run
#server.port=8001
server.port=${PORT:0}
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

##Indicamos la ubicacion del servidor de Eureka, se recomienda cuando el servidor eureka se encuentra en otra maquina
##cuando el servidor eureka esta en la misma maquina que el cliente eureka no es necesario especificar esta propiedad
##Esta propiedad permitira al cliente mandar sus datos al servidor para ser registrado y asi el servidor eureka sepa que este cliente se encuentra activo
##Para que el servidor eureka sepa que el ciente esta activo, el cliente manda una senal cada 30 segundos (senal = latido), se elimina del registro del servidor de eureka si deja de mandar la senal por 90 segundos
##y se volvera a registrar en el servidor luego de enviar 3 senales o 90 seg 
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka
##En docker
eureka.client.service-url.defaultZone=http://servicio-eureka-server:8761/eureka


##Especifica el % de request que enviara a muestra, por defecto es 10% o 0.1, le cambiamos a 1.0 o al 100%
spring.sleuth.sampler.probability=1.0

##Especifica el url del servidor zipkin, por default es http://localhost:9411/ si no se especifica pero igual le ponemos
#sspring.zipkin.base-url=http://localhost:9411/

##Para Spring 2.2.1 en adelante
spring.zipkin.sender.type=rabbit

## Parametros de BD MySQL
#spring.datasource.url=jdbc:mysql://localhost:3306/db_springboot_cloud?serverTimezone=America/Indiana/Indianapolis&allowPublicKeyRetrieval=true&useSSL=false
#spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

##Parametros BD solo desarrollo, nunca produccion
#spring.jpa.hibernate.ddl-auto=create-drop

#logging.level.org.hibernate.SQL=debug