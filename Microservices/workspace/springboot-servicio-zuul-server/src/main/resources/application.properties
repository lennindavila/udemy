spring.application.name=servicio-zuul-server
server.port=8090

##Indicamos la ubicacion del servidor de Eureka, se recomienda cuando el servidor eureka se encuentra en otra maquina
##cuando el servidor eureka esta en la misma maquina que el cliente eureka no es necesario especificar esta propiedad
##Esta propiedad permitira al cliente mandar sus datos al servidor para ser registrado y asi el servidor eureka sepa que este cliente se encuentra activo
##Para que el servidor eureka sepa que el ciente esta activo, el cliente manda una senal cada 30 segundos (senal = latido), se elimina del registro del servidor de eureka si deja de mandar la senal por 90 segundos
##y se volvera a registrar en el servidor luego de enviar 3 senales o 90 seg,  se puede definir con "service-url" o tambien "serviceUrl"
##eureka.client.service-url.defaultZone=http://localhost:8761/eureka
#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka
##En docker
eureka.client.service-url.defaultZone=http://servicio-eureka-server:8761/eureka

#El timeout de hystrix debe ser mayor o igual al de ribbon, pero se recomienda mayor, ribbon = (3000 + 10000 = 13000) y hystrix = 14000 para nuestro ejemplo
#Por docker le hemos multiplicado 3 veces su valor por si acaso
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=60000
ribbon.ConnectTimeout=9000
ribbon.ReadTimeout=30000

zuul.routes.productos.service-id=servicio-productos
zuul.routes.productos.path=/api/productos/**

zuul.routes.items.service-id=servicio-items
zuul.routes.items.path=/api/items/**

zuul.routes.usuarios.service-id=servicio-usuarios
zuul.routes.usuarios.path=/api/usuarios/**

zuul.routes.security.service-id=servicio-oauth
zuul.routes.security.path=/api/security/**
#con sensitive-headers se excluye de la cabecera las cookies para que funcione la autenticacion
zuul.routes.security.sensitive-headers=Cookie,Set-Cookie


##Especifica el % de request que enviara a muestra, por defecto es 10% o 0.1, le cambiamos a 1.0 o al 100%
spring.sleuth.sampler.probability=1.0

##Especifica el url del servidor zipkin, por default es http://localhost:9411/ si no se especifica pero igual le ponemos
#spring.zipkin.base-url=http://localhost:9411/

##Para Spring 2.2.1 en adelante
spring.zipkin.sender.type=rabbit